version: 2.1

references:
  workspace_root: &workspace_root
    /home/circleci/blog.sugarshin.net
  filter_gh_pages: &filter_gh_pages
    filters:
      branches:
        ignore: gh-pages
  yarn_install_prod: &yarn_install_prod
    yarn install --frozen-lockfile --cache-folder /home/circleci/.cache/yarn --prod
  yarn_install: &yarn_install
    yarn install --frozen-lockfile --cache-folder /home/circleci/.cache/yarn
  node_install_packages_base: &node_install_packages_base
    app-dir: *workspace_root
    include-branch-in-cache-key: false
    pkg-manager: yarn
    cache-path: /home/circleci/.cache/yarn
    cache-version: v2
    override-ci-command: *yarn_install
  node_modules_cache_key: &node_modules_cache_key
    v4-node-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "yarn.lock" }}-node-modules

orbs:
  slack: circleci/slack@5.1.1
  node: circleci/node@7.0.0
  gh-pages: sugarshin/gh-pages@0.0.6

executors:
  nodejs:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:12.22.7
        environment:
          TZ: "Asia/Tokyo"
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
  nodejs_browsers:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:12.22.7-browsers
        environment:
          TZ: "Asia/Tokyo"
  playwright_base:
    working_directory: *workspace_root
    docker:
      - image: sugarshin/playwright-base-browsers:1.0.0
        environment:
          TZ: "Asia/Tokyo"
          PLAYWRIGHT_BROWSERS_PATH: /usr/local/ms-playwright
  cimg_base:
    working_directory: *workspace_root
    docker:
      - image: cimg/base:stable-20.04
        environment:
          TZ: "Asia/Tokyo"

commands:
  build_assets:
    steps:
      - run:
          name: Build Assets
          command: NODE_ENV=production npm run build
      - run:
          name: Prerender
          command: bin/react-snap --cns

jobs:
  test:
    executor: nodejs
    steps:
      - checkout
      - node/install-packages:
          <<: *node_install_packages_base
      - save_cache:
          name: Save node_modules cache
          key: *node_modules_cache_key
          paths:
            - node_modules
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test:ci
      - store_test_results:
          path: coverage
  build_test:
    executor: nodejs_browsers
    steps:
      - checkout
      - node/install-packages:
          <<: *node_install_packages_base
          override-ci-command: *yarn_install_prod
      - build_assets
      - store_artifacts:
          path: build
          destination: build
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  # deploy_review_app:
  #   executor: nodejs_browsers
  #   steps:
  #     - checkout
  #     - node/install-packages:
  #         <<: *node_install_packages_base
  #         override-ci-command: *yarn_install_prod
  #     - run:
  #         name: Build Assets for Review App
  #         command: npm run build:review-app
  #         environment:
  #           NODE_ENV: production
  #     - store_artifacts:
  #         path: build-review-app
  #         destination: build-review-app
  #     - run:
  #         name: Deploy Review App
  #         command: |
  #           pr_number="${CIRCLE_PULL_REQUESTS##*/}"
  #           if [[ -z "${pr_number}" ]]; then
  #             echo "Didn't found a Pull request number from the `CIRCLE_PULL_REQUESTS` environment variable."
  #           else
  #             yarn add -E firebase-tools@9
  #             chennel_id="pr-${pr_number}"
  #             node_modules/.bin/firebase hosting:channel:deploy "${chennel_id}" --expires 3d --token "${FIREBASE_TOKEN}"
  #             # TODO:
  #             # review_url=$(node_modules/.bin/firebase hosting:channel:open "${chennel_id}")
  #           fi
  #     # TODO:
  #     # - slack/notify:

  deploy:
    executor: cimg_base
    steps:
      - checkout
      - gh-pages/deploy:
          attach-workspace: true
          workspace-root: *workspace_root
          build-dir: build
          git-user: CircleCI
          git-email: s+circleci@sugarshin.net
          ssh-fingerprints: 4f:c7:c2:20:07:b5:11:84:75:b4:e5:94:73:48:9b:4b
  notify_slack:
    machine: true
    steps:
      - slack/notify:
          message: "Blog has been updated! <https://blog.sugarshin.net>"
          mentions: "${SLACK_UUID}"
          webhook: ${SLACK_WEBHOOK_URL}
  e2e_test:
    executor: playwright_base
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules cache
          keys:
            - *node_modules_cache_key
      - run:
          name: Install Playwright
          command: |
            cd e2e-test
            yarn install --frozen-lockfile --cache-folder /home/circleci/.cache/yarn --prod
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - run:
          command: npm run build:e2e-test
          environment:
            NODE_ENV: production
      - run:
          command: node static-serve
          background: true
          environment:
            PORT: '3000'
            DIR: build-e2e-test
      - run:
          command: npx wait-on@5 http-get://localhost:3000
      - run:
          command: npm run e2e-test:ci
          environment:
            BASE_URL: http://localhost:3000
            ARTIFACTS_DIR: e2e-test-artifacts
      - store_artifacts:
          path: e2e-test-artifacts
          destination: e2e-test-artifacts

workflows:
  test_build_deploy_notify:
    jobs:
      - test:
          <<: *filter_gh_pages
      - build_test:
          <<: *filter_gh_pages
          requires:
            - test
      - e2e_test:
          <<: *filter_gh_pages
          requires:
            - build_test
      # - deploy_review_app:
      #     filters:
      #       branches:
      #         ignore:
      #           - gh-pages
      #           - master
      #     requires:
      #       - e2e_test
      - deploy:
          requires:
            - test
            - build_test
            - e2e_test
          filters:
            branches:
              only: master
      - notify_slack:
          requires:
            - deploy
